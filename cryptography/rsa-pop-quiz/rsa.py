import binascii
import sys
import threading

threading.stack_size(67108864) # 64MB stack
sys.setrecursionlimit(10**6)

def egcd(a, b):
    if a == 0:
        return b, 0, 1
    else:
        g, y, x = egcd(b % a, a)

    return g, x - (b // a) * y, y

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('Modular inverse does not exist')
    else:
        return x % m


thread = threading.Thread(target=egcd)
thread.start()

print("Question 1")
print("- - - - - - - - - -")
# Question 1 - Y
p = 60413
q = 76753
n = p*q

print("" + str(n))
print("===================\n")

print("Question 2 - Yes")
print("- - - - - - - - - -")
# Question 2 - Y
p = 54269
n = 5051846941
q = n/p

print("" + str(int(q)))
print("===================\n")

print("Question 3 - No")
print("- - - - - - - - - -")
# Question 3 - N
e = 3
n = 12738162802910546503821920886905393316386362759567480839428456525224226445173031635306683726182522494910808518920409019414034814409330094245825749680913204566832337704700165993198897029795786969124232138869784626202501366135975223827287812326250577148625360887698930625504334325804587329905617936581116392784684334664204309771430814449606147221349888320403451637882447709796221706470239625292297988766493746209684880843111138170600039888112404411310974758532603998608057008811836384597579147244737606088756299939654265086899096359070667266167754944587948695842171915048619846282873769413489072243477764350071787327913
print("Invalid")
print("===================\n")

print("Question 4 - Yes")
print("- - - - - - - - - -")
# Question 4 - Y

q = 66347
p = 12611
# n = p*q
# tot(n)=(p-1)(q-1)
ans = (p - 1) * (q - 1)

print("" + str(ans))
print("===================\n")

print("Question 5 - Yes")
print("- - - - - - - - - -")
# Question 5 - Y
# To encrypt is c= m^e mod n
text = 6357294171489311547190987615544575133581967886499484091352661406414044440475205342882841236357665973431462491355089413710392273380203038793241564304774271529108729717
e = 3
n = 29129463609326322559521123136222078780585451208149138547799121083622333250646678767769126248182207478527881025116332742616201890576280859777513414460842754045651093593251726785499360828237897586278068419875517543013545369871704159718105354690802726645710699029936754265654381929650494383622583174075805797766685192325859982797796060391271817578087472948205626257717479858369754502615173773514087437504532994142632207906501079835037052797306690891600559321673928943158514646572885986881016569647357891598545880304236145548059520898133142087545369179876065657214225826997676844000054327141666320553082128424707948750331
ans = pow(text, e, n)
print("" + str(ans))
print("===================\n")

print("Question 6 - No")
print("- - - - - - - - - -")
# Question 6 - N
# To decrypt is t= c^d mod n
text = 107524013451079348539944510756143604203925717262185033799328445011792760545528944993719783392542163428637172323512252624567111110666168664743115203791510985709942366609626436995887781674651272233566303814979677507101168587739375699009734588985482369702634499544891509228440194615376339573685285125730286623323
e = 3
n = 27566996291508213932419371385141522859343226560050921196294761870500846140132385080994630946107675330189606021165260590147068785820203600882092467797813519434652632126061353583124063944373336654246386074125394368479677295167494332556053947231141336142392086767742035970752738056297057898704112912616565299451359791548536846025854378347423520104947907334451056339439706623069503088916316369813499705073573777577169392401411708920615574908593784282546154486446779246790294398198854547069593987224578333683144886242572837465834139561122101527973799583927411936200068176539747586449939559180772690007261562703222558103359
ans = pow(text, e, n)
print("Invalid")
print("===================\n")

print("Question 7 - Yes")
print("- - - - - - - - - -")
# Question 7 - Y
p = 92092076805892533739724722602668675840671093008520241548191914215399824020372076186460768206814914423802230398410980218741906960527104568970225804374404612617736579286959865287226538692911376507934256844456333236362669879347073756238894784951597211105734179388300051579994253565459304743059533646753003894559
q = 97846775312392801037224396977012615848433199640105786119757047098757998273009741128821931277074555731813289423891389911801250326299324018557072727051765547115514791337578758859803890173153277252326496062476389498019821358465433398338364421624871010292162533041884897182597065662521825095949253625730631876637
phi =  (p-1) * (q-1)
e = 65537
d = modinv(e, phi)
print("" + str(d))
print("===================\n")

print("Question 8 - Yes")
print("- - - - - - - - - -")
# Q8 - Y
p = 153143042272527868798412612417204434156935146874282990942386694020462861918068684561281763577034706600608387699148071015194725533394126069826857182428660427818277378724977554365910231524827258160904493774748749088477328204812171935987088715261127321911849092207070653272176072509933245978935455542420691737433
c = 11414354166074402755164590556641179510390955987180616313598814488860571850569627408904290135283428920666717612247935936889741174861740224415910111160498656256896678079471373793134970331695671979818719947249086183419374170380011838377712137156655353333603309532154429629316613952073734543526935095731152872812955954824132637944535153824014078120443101933069681669256602347092095050923741698741934906694415931234676691035622479817210233347697548820214251179785631792488566945306938417118918268033241877748155382065658575003275681795893749615704427227208993357057762628133230351866198772974377028377937056546764806501336
#c = 14177987223508642131782797570705581865562801943020304324633179842233648468773284681099013143283137490421880620316003804700542539367277056119924780390073376368416200076614798528210303393148038397972770835314176889384910743248227379602503304665968858682295687434435804347875820140516870497567301408412715581672979699897049453701769585723745678466885154478156861404094657217832388752774912467316297776811251467400544288767645372505477570969704731692064200678746651536132006463037418757874224499384628808197361618023507921293784071910631939869468132820891513863046467487362047958571217107053268878096051632274561080703969
e = 65537
n = 23952937352643527451379227516428377705004894508566304313177880191662177061878993798938496818120987817049538365206671401938265663712351239785237507341311858383628932183083145614696585411921662992078376103990806989257289472590902167457302888198293135333083734504191910953238278860923153746261500759411620299864395158783509535039259714359526738924736952759753503357614939203434092075676169179112452620687731670534906069845965633455748606649062394293289967059348143206600765820021392608270528856238306849191113241355842396325210132358046616312901337987464473799040762271876389031455051640937681745409057246190498795697239
#q = int(int(n)/int(p))
q = n/p
print(q)
phi = (p-1) * (q-1)
d = modinv(e, phi)
ans = pow(c,d,n)
#ans = hex(ans)
print(ans)

#c2 = pow(ans, e , n)
#print(c == c2)
#print(c)
#print(c2)
hex_string = '%x' % ans
#print("" + str(ans))
len_of_str = len(hex_string)
#print(hex_string)
transformed_text = binascii.unhexlify(hex_string.zfill(len_of_str + (len_of_str & 1)))
#print(transformed_text.decode().encode('ascii',errors='ignore'))
#print(transformed_text.decode('ascii'))
#print(transformed_text)
print("===================\n")